<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title><%=title %></title>
</head>
<body>

<body>

<div id="content">
    <h1>xlsx</h1>
</div>

<script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>
<script>
  (async() => {
    /* fetch JSON data and parse */
    // const url = "https://sheetjs.com/data/executive.json";
    // const raw_data = await (await fetch(url)).json();

    /* filter for the Presidents */
    // const prez = raw_data.filter(row => row.terms.some(term => term.type === "prez"));

    /* flatten objects */
    // const rows = prez.map(row => ({
    //   name: row.name.first + " " + row.name.last,
    //   birthday: row.bio.birthday
    // }));
    <!--let ejs = require('ejs');-->
    <!--let title= ejs.render('<%= title %>', {title: title});-->

    <!--&lt;!&ndash;const title = `<%=title %>`;&ndash;&gt;-->

    <!--console.log(title);-->








    <!-- Запись  в файл -->

    const rows = [
      { name: 'Сергей Новожилов', birthday: '1963-01-07' },
      { name: 'George Washington', birthday: '1732-02-22' },
      { name: 'John Adams', birthday: '1735-10-19' },
    ];

    /* generate worksheet and workbook */
    const worksheet = XLSX.utils.json_to_sheet(rows);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, "Dates");

    /* fix headers */
    XLSX.utils.sheet_add_aoa(worksheet, [["Name", "Birthday"]], { origin: "A1" });

    /* calculate column width */
    const max_width = rows.reduce((w, r) => Math.max(w, r.name.length), 10);
    worksheet["!cols"] = [ { wch: max_width } ];

    // /* create an XLSX file and try to save to Presidents.xlsx */
    XLSX.writeFile(workbook, "Presidents.xlsx", { compression: true });
  })();
</script>
<body>

</body>
</html>
